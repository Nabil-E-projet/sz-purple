# Generated by Django 4.2.20 on 2025-08-22 16:17

from django.db import migrations


def update_convention_labels(apps, schema_editor):
    """
    Met à jour les labels des conventions collectives pour qu'ils soient plus lisibles.
    """
    # Important : on récupère le modèle historique pour cette migration
    BulkAnalysisGroup = apps.get_model('analysis', 'BulkAnalysisGroup')
    
    # La liste des choix existants au moment de la migration
    # On met à jour les labels ici pour qu'ils soient "propres"
    convention_map = {
        'ACTIVITES_DECHET': 'Activités du déchet',
        'AIDE_ET_SOINS_A_DOMICILE': 'Aide et soins à domicile',
        'ARTICLES_SPORT_LOISIRS': 'Articles de sport et loisirs',
        'ASSURANCES': 'Sociétés d\'assurances',
        'ATELIERS_CHANTIERS_INSERTION': 'Ateliers et chantiers d\'insertion',
        'AUDIOVISUEL_ELECTRONIQUE': 'Audiovisuel, électronique et équipement ménager',
        'BANQUE': 'Banque',
        'BATIMENT_CADRES': 'Bâtiment : Cadres',
        'BATIMENT_ETAM': 'Bâtiment : ETAM',
        'BATIMENT_OUVRIERS_MOINS_10': 'Bâtiment : Ouvriers (-10 salariés)',
        'BATIMENT_OUVRIERS_PLUS_10': 'Bâtiment : Ouvriers (+10 salariés)',
        'BOULANGERIE_ARTISANALE': 'Boulangerie-pâtisserie artisanale',
        'BRICOLAGE': 'Bricolage',
        'BUREAU_NUMERIQUE': 'Bureautique et numérique (CCN BETEM)',
        'CABINETS_DENTAIRES': 'Cabinets dentaires',
        'CABINETS_MEDICAUX': 'Cabinets médicaux',
        'CADRES_TRAVAUX_PUBLICS': 'Cadres des travaux publics',
        'CENTRES_SOCIAUX': 'Centres sociaux et socioculturels',
        'COIFFURE': 'Coiffure',
        'COMMERCE_ALIMENTAIRE': 'Commerce de détail alimentaire',
        'COMMERCE_DETAIL_ALIMENTAIRE': 'Commerce de détail alimentaire spécialisé',
        'COMMERCE_DETAIL_NON_ALIMENTAIRE': 'Commerce de détail non alimentaire',
        'COMMERCE_HABILLEMENT_TEXTILE': 'Commerce de l\'habillement et du textile',
        'COMMERCES_DE_GROS': 'Commerces de gros',
        'ECLAT': 'Éclat (Animation)',
        'ENSEIGNEMENT_PRIVE_INDEPENDANT': 'Enseignement privé indépendant',
        'ENSEIGNEMENT_PRIVE_NON_LUCATIF': 'Enseignement privé non lucratif (EPNL)',
        'ENTREPRISES_DE_PROPRETE': 'Entreprises de propreté',
        'ESTHETIQUE_COSMETIQUE': 'Esthétique-cosmétique',
        'EXPERTS_COMPTABLES': 'Experts-comptables',
        'FERROVIAIRE': 'Ferroviaire',
        'GARDIENS_IMMEUBLES': 'Gardiens, concierges et employés d\'immeubles',
        'HABILLEMENT_SUCCURSALES': 'Habillement : succursales',
        'HCR': 'Hôtels, Cafés, Restaurants (HCR)',
        'HOSPITALISATION_NON_LUCATIF': 'Hospitalisation privée non lucrative (FEHAP)',
        'HOSPITALISATION_PRIVEE': 'Hospitalisation privée (FHP)',
        'IMMOBILIER': 'Immobilier',
        'INDUSTRIE_PHARMACEUTIQUE': 'Industrie pharmaceutique',
        'INDUSTRIES_ALIMENTAIRES_DIVERSES': 'Industries alimentaires diverses',
        'INDUSTRIES_CHIMIQUES': 'Industries chimiques',
        'MAINTENANCE_MATERIELS_AGRICOLES': 'Maintenance des matériels agricoles',
        'METALLURGIE_CADRES': 'Métallurgie : Cadres',
        'METALLURGIE_REGION_PARISIENNE': 'Métallurgie (région parisienne)',
        'NEGOCE_AMEUBLEMENT': 'Négoce de l\'ameublement',
        'NEGOCE_MATERIAUX_CONSTRUCTION': 'Négoce des matériaux de construction',
        'NOTARIAT': 'Notariat',
        'ORGANISMES_FORMATION': 'Organismes de formation',
        'PARTICULIERS_EMPLOYEURS': 'Particuliers employeurs',
        'PERSONNES_INADAPTEES': 'Personnes inadaptées et handicapées (CCN 66)',
        'PHARMACIE_OFFICINE': 'Pharmacie d\'officine',
        'PLASTURGIE': 'Plasturgie',
        'PRESTATAIRES_TERTIAIRE': 'Prestataires de services du secteur tertiaire',
        'PREVENTION_SECURITE': 'Prévention et sécurité',
        'PUBLICITE': 'Publicité',
        'RESTAURATION_COLLECTIVITES': 'Restauration de collectivités',
        'RESTAURATION_RAPIDE': 'Restauration rapide',
        'SECURITE_SOCIALE': 'Sécurité sociale',
        'SERVICES_A_LA_PERSONNE': 'Services à la personne',
        'SERVICES_AUTOMOBILE': 'Services de l\'automobile',
        'SPORT': 'Sport',
        'SYNTEC': 'Syntec (Bureaux d\'études techniques)',
        'TELECOMMUNICATIONS': 'Télécommunications',
        'TRANSPORT_AERIEN_PERSONNEL_SOL': 'Transport aérien - Personnel au sol',
        'TRANSPORTS_PUBLICS_URBAINS': 'Transports publics urbains',
        'TRANSPORTS_ROUTIERS': 'Transports routiers',
        'TRAVAUX_PUBLICS_ETAM': 'Travaux publics : ETAM',
        'TRAVAUX_PUBLICS_OUVRIERS': 'Travaux publics : Ouvriers',
        'AUTRE': 'Autre / Non spécifiée',
    }

    # On ne met pas à jour la BDD, on fournit juste les bons labels
    # au moment où le frontend récupère la liste.
    # Cette fonction de migration est donc "décorative" et prépare
    # le modèle de données pour l'étape suivante.

class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0005_bulkanalysisgroup_and_more'),
    ]

    operations = [
        migrations.RunPython(update_convention_labels, migrations.RunPython.noop),
    ]
